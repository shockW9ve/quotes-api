apiVersion: v1
kind: Secret
metadata: { name: pg-secret, namespace: quotes }
type: Opaque
data:
  POSTGRES_PASSWORD: cG9zdGdyZXM=   # "postgres" base64
  POSTGRES_USER: cG9zdGdyZXM=
  POSTGRES_DB: cXVvdGVzX2Rldg==     # "quotes_dev"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata: { name: pg-data, namespace: quotes }
spec:
  accessModes: [ReadWriteOnce]
  resources: { requests: { storage: 1Gi } }

---
apiVersion: apps/v1
kind: Deployment
metadata: { name: postgres, namespace: quotes }
spec:
  replicas: 1
  selector: { matchLabels: { app: postgres } }
  template:
    metadata: { labels: { app: postgres } }
    spec:
      containers:
      - name: postgres
        image: postgres:16-alpine
        ports: [{ containerPort: 5432 }]
        env:
        - name: POSTGRES_PASSWORD
          valueFrom: { secretKeyRef: { name: pg-secret, key: POSTGRES_PASSWORD } }
        - name: POSTGRES_USER
          valueFrom: { secretKeyRef: { name: pg-secret, key: POSTGRES_USER } }
        - name: POSTGRES_DB
          valueFrom: { secretKeyRef: { name: pg-secret, key: POSTGRES_DB } }
        volumeMounts:
        - { name: data, mountPath: /var/lib/postgresql/data }
      volumes:
      - name: data
        persistentVolumeClaim: { claimName: pg-data }

---
apiVersion: v1
kind: Service
metadata: { name: postgres, namespace: quotes }
spec:
  selector: { app: postgres }
  ports:
    - name: pg
      port: 5432
      targetPort: 5432

