name: ci
on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore Quotes.sln

      - name: Build
        run: dotnet build Quotes.sln -c Release --no-restore

      - name: Test
        run: dotnet test tests/Quotes.Api.Tests/Quotes.Api.Tests.csproj -c Release --no-build --logger "trx;LogFileName=test_results.trx"

      - name: Test (with coverage gate)
        run: dotnet test tests/Quotes.Api.Tests/Quotes.Api.Tests.csproj -c Release \
        /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura \
        /p:Threshold=80 /p:ThresholdType=line

  docker:
    if: github.ref == 'refs/heads/main'
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/quotes-api
          tags: |
            type=sha,format=long

      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
